apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'antlr'

sourceCompatibility = 1.8
version = "0.2"

task wrapper(type: Wrapper) {
  gradleVersion = '4.1'
}

repositories { 
  mavenCentral()
}

apply from: 'dependencies.gradle'
dependencies {
  antlr 'org.antlr:antlr4:4.5.3'

  compile libs.gsCollections

  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:3.8.0'
  testCompile 'nl.jqno.equalsverifier:equalsverifier:2.3.2'
}

// Adapted from https://github.com/rossng/gradle-antlr-intellij/blob/master/build.gradle

generateGrammarSource {
  def targetDir = file("${project.buildDir}/generated-src/main/java/")
  outputDirectory = targetDir
  arguments += ["-visitor", "-package", "tdanford.ideals.antlr"]

  doLast {
    // copy the java generated by ANTLR into a folder outside the build directory for IntelliJ
    copy {
      from targetDir
      into "${projectDir}/src/generated/java"
    }
  }
}

// make sure that ANTLR generates java before compiling the project
// include the generated java code in the compilation
compileJava.dependsOn generateGrammarSource
compileJava {
  source += ["${project.buildDir}/generated-src/main/java"]
}

// when cleaning, remove the generated sources too
task removeGeneratedSource(type: Delete) {
  delete "${projectDir}/src/generated/"
}
clean.dependsOn removeGeneratedSource

// mark the generated source as such for IntelliJ IDEA
def ideaAntlrDir = file("${projectDir}/src/generated/java")
sourceSets.main.java.srcDirs += ideaAntlrDir
idea {
  module {
    generatedSourceDirs += ideaAntlrDir
  }
}
